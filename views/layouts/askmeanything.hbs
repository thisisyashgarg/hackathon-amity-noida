<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EaseIt - Ask Me Anything</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100;0,200;1,300&family=Roboto:wght@100&display=swap"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="stylesheet" href="../css/styles.css" />
  </head>
  <body class="mb-56">
    <!-- Navbar -->
    <nav
      class="flex w-screen justify-center items-center text-center pt-10 bg-grey"
    >
      <!-- Flex Container -->
      <div
        class="inline-flex items-center justify-between space-x-9 bg-transparent py-4 px-20 rounded-2xl bg-black/10"
      >
        <!-- logo -->
        <a href="/homepage" class="text-cyan-300 text-right" style="font-size:1.5rem">
          ←
        </a>
        <img src="../img/openai-logo.svg" class="pt-px" alt="" />
        <!-- Links -->

        <a
          href="/homepage"
          class="font-extrabold text-transparent text-2xl bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500"
        >EaseIt</a>
        {{!-- <a href="" class="text-white">Profile</a>
        <a href="" class="text-white">Logout</a> --}}

      </div>
    </nav>

    <!-- Page Topic -->
    <section id="personalisedMessage">
      <div class="content justify-center text-center pt-10 mt-10">
        <h1
          class="font-extrabold text-transparent text-5xl bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500"
        >
          Ask Me Anything
        </h1>
        <p class="text-xl text-white pt-6 max-w-sm mx-auto">
          Could not find your niche ? ASK ME ANYTHING!
        </p>
      </div>
    </section>

    <section id="getAnswer">
      <!-- flex-row division -->
      <div class="flex flex-row mt-24 space-x-32 justify-center">
        <!-- message -->
        <div class="text-white max-w-fit">
          <div>
            <form method="post" action="/ama">
              <label
                for="ama"
                style="font-size: 1.5rem; font-weight:large; color: white"
              >Enter your query here</label><br />
              <div class="flex">
                 <textarea
                name="ama"
                required
                id="ama"
                cols="60"
                rows="20"
                class="bg-transparent text-white rounded-lg"
                style="padding: 5px;"
              >{{ama}}</textarea><br />
              <button
                id="mic1"
                type="button"
                class="bg-transparent border-gray-400 text-white"
                style="font-size: 0.7rem"
              ><img style="size:;" src="../img/Vector.svg" alt="" /></button>
             
              </div>
               <button
                type="submit"
                class="buttons bg-transparent border-gray-400 text-white text-cyan-300 pl-24 pt-7 text-2xl justify-center"
              ><span class="buttons">Ask Now →</span> </button>
             
            </form>
          </div>
        </div>

        <div>
          <label
            for=""
            style="color:white;font-size: 1.5rem; font-weight:large;"
          >{{label}}</label><br />
          <textarea
            style="padding: 5px;"
            name=""
            id=""
            cols="60"
            rows="20"
            class="input-border text-transparent bg-clip-text rounded-lg "
          >{{data}}</textarea>
        </div>

      </div>
    </section>

    <script src="../../app.js"></script>
    <script defer src="../../public/js/promptCall.js"></script>
    <script>
      const textFromSpeechBox1 =document.getElementById('ama') ;
      const buttonToRecordSpeech1=document.getElementById('mic1'); 
      const SpeechRecognition =window.SpeechRecognition || webkitSpeechRecognition; 
      const SpeechGrammarList =window.SpeechGrammarList || webkitSpeechGrammarList;
      const SpeechRecognitionEvent = window.SpeechRecognitionEvent || webkitSpeechRecognitionEvent; //basic grammar
      const grammer = '#JSGF v1.0;'; 

      const recognition = new SpeechRecognition(); 
      const speechRecognitionGrammerList = new SpeechGrammarList(); //adding grammar to created object
      speechRecognitionGrammerList.addFromString(grammer, 1); //adding grammar

      recognition.grammars = speechRecognitionGrammerList; 
      recognition.lang = 'en-US';
      recognition.interimResults = true; 
     
      recognition.onspeechend = () =>{ recognition.stop(); }
      recognition.onerror = (error) =>{ textFromSpeechBox1.textContent = `Error
      occured in recognition: ${error}` } 

      buttonToRecordSpeech1.addEventListener('click', () =>{
      recognition.start(); } ) 
      
      recognition.onresult = (input) => { 
      const last = input.results.length -1; 
      const dataToBeTranscripted = input.results[last][0].transcript;
      textFromSpeechBox1.textContent = `${dataToBeTranscripted}`; 
      } 
      
     
    </script>

  </body>
</html>